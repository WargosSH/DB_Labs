Аналізуючи приклад універсального відношення, ми можемо виявити наступні проблеми та надлишкові дані:

Поле "number" здається зайвим, оскільки воно не несе особливого значення та може бути замінене автоматичним інкрементним стовпцем "id", який вже присутній в таблиці.
Поле "book_code" може бути замінене унікальним ідентифікатором "id" таблиці.
Поле "is_new" має булеве значення, але його можна замінити на стовпець "status" типу ENUM або TINYINT, який вказуватиме на статус "новинка" або "не новинка".
Поле "publ_house" може бути витягнуте в окрему таблицю "publishers", яка буде містити унікальні значення видавництв.
Поле "theme" може бути витягнуте в окрему таблицю "themes", яка буде містити унікальні значення тем книг.
Поле "category" може бути витягнуте в окрему таблицю "categories", яка буде містити унікальні значення категорій книг.
На основі цих спостережень ми можемо виконати нормалізацію універсального відношення та розбити його на наступні таблиці:

Таблиця "books":
    id (PRIMARY KEY)
    book_code
    is_new
    name
    price
    publ_houseID
    pages
    book_date
    book_count
    format
    theme_id (FOREIGN KEY references themes(id))
    category_id (FOREIGN KEY references categories(id))

Таблиця "publishers":
    id (PRIMARY KEY)
    publ_house

Таблиця "themes":
    id (PRIMARY KEY)
    theme

Таблиця "categories":
    id (PRIMARY KEY)
    category